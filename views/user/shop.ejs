<%- include("../partials/user/header") %>

<!-- Shop Section -->
<div class="shop-container container-fluid py-5">
    <div class="row g-4 pt-5">
        <!-- Filters Column -->
        <div class="col-lg-2">
            <div class="filters-wrapper position-sticky glass-card" style="top: 4rem;">
                <form id="filterForm" action="/filter" method="GET" class="p-4">
                    <h6 class="fw-bold mb-4 text-gradient">Filters</h6>
                    <!-- Categories -->
                    <div class="mb-4">
                        <p class="text-muted mb-3 small text-uppercase">Categories</p>
                        <div class="category-list">
                            <% if (typeof category !== 'undefined') { %>
                                <% if (category && category.length > 0) { %>
                                    <% category.forEach(function(cat) { %>
                                        <div class="form-check mb-2">
                                            <input class="form-check-input" type="radio" 
                                                   name="category" 
                                                   id="category<%= cat._id %>" 
                                                   value="<%= cat._id %>"
                                                   <%= (typeof selectedCategory !== 'undefined' && selectedCategory === cat._id.toString()) ? 'checked' : '' %>>
                                            <label class="form-check-label" for="category<%= cat._id %>">
                                                <%= cat.name %>
                                            </label>
                                        </div>
                                    <% }); %>
                                <% } %>
                            <% } %>
                            <% if (typeof selectedCategory !== 'undefined' && selectedCategory) { %>
                                <button type="button" class="btn btn-sm btn-outline-danger mt-2" id="clearCategory">
                                    <i class="fas fa-times"></i> Clear Category
                                </button>
                            <% } %>
                        </div>
                    </div>
                    <!-- Price Range -->
                    <div class="mb-4">
                        <p class="text-muted mb-3 small text-uppercase">Price Range</p>
                        <div class="range-slider">
                            <input type="range" name="price" class="form-range custom-range" min="0" max="100000" step="1000" id="priceRange" value="<%= typeof selectedPrice !== 'undefined' ? selectedPrice : 100000 %>">
                            <div class="d-flex justify-content-between mt-2">
                                <span class="price-label text-muted small">₹0</span>
                                <span class="price-label text-muted small" id="priceValue">₹<%= typeof selectedPrice !== 'undefined' ? selectedPrice : 100000 %></span>
                            </div>
                        </div>
                    </div>
                    <!-- Apply Button -->
                    <button type="submit" class="btn btn-dark w-100 btn-hover-effect">Apply Filters</button>
                </form>
            </div>
        </div>

        <!-- Main Content Column -->
        <div class="col-lg-10">
            <!-- Search Bar -->
            <div class="search-bar mb-4 glass-card p-3">
                <div class="row g-3">
                    <div class="col-md-8">
                        <div class="search-input-group">
                            <i class="fas fa-search search-icon"></i>
                            <input 
                                type="text" 
                                class="form-control search-control" 
                                id="searchInput"
                                placeholder="Search products..."
                            >
                        </div>
                    </div>
                    <div class="col-md-4">
                        <select class="form-select modern-select" id="sortSelect" name="sort">
                            <option value="">Sort by</option>
                            <option value="newest">New Arrivals</option>
                            <option value="priceHigh">Price: High to Low</option>
                            <option value="priceLow">Price: Low to High</option>
                            <option value="nameAsc">Name: A to Z</option>
                            <option value="nameDesc">Name: Z to A</option>
                        </select>
                    </div>
                </div>
            </div>

            <!-- Products Grid -->
            <div class="row row-cols-2 row-cols-md-3 row-cols-lg-4 g-4" id="products-container">
                <% products.forEach(product => { %>
                    <div class="col product-item">
                        <div class="product-card glass-card h-100" data-product-name="<%= product.productName.toLowerCase() %>" data-product-description="<%= product.description.toLowerCase() %>" data-product-brand="<%= product.brand.toLowerCase() %>" data-product-price="<%= product.salePrice %>">
                            <div class="product-image-container">
                                <img 
                                    src="<%= product.productImage && product.productImage.length > 0 ? `/uploads/re-image/${product.productImage[0]}` : '/uploads/re-image/default.jpeg' %>" 
                                    class="card-img-top product-image" 
                                    alt="<%= product.productName %>"
                                    loading="lazy"
                                >
                                <% if (product.productOffer > 0) { %>
                                    <div class="offer-badge">
                                        <span><%= product.productOffer %>% OFF</span>
                                    </div>
                                <% } %>
                                <button class="wishlist-btn" onclick="toggleWishlist(this, '<%= product._id %>')" data-product-id="<%= product._id %>">
                                    <i class="far fa-heart"></i>
                                </button>
                            </div>
                            <div class="card-body d-flex flex-column p-4">
                                <h6 class="product-title mb-2">
                                    <%= product.productName %>
                                </h6>
                                <div class="price-container mt-auto">
                                    <% if (product.productOffer > 0) { %>
                                        <div class="product-price">
                                            <span class="current-price">₹<%= product.salePrice %></span>
                                            <span class="original-price">₹<%= product.regularPrice %></span>
                                        </div>
                                    <% } else { %>
                                        <p class="current-price mb-0">₹<%= product.salePrice %></p>
                                    <% } %>
                                </div>
                                <div class="product-footer mt-3">
                                    <% if (product.available_quantity === 0) { %>
                                        <span class="stock-badge out-of-stock">Out of Stock</span>
                                    <% } else { %>
                                        <span class="stock-badge in-stock">In Stock</span>
                                    <% } %>
                                    <a href="/productDetails?id=<%= product._id %>" class="btn btn-outline-dark btn-sm w-100 mt-2">View Details</a>
                                </div>
                            </div>
                        </div>
                    </div>
                <% }); %>
            </div>

            <!-- Modern Pagination -->
            <% if (typeof totalPages !== 'undefined' && totalPages > 1) { %>
                <div class="pagination-container mt-5">
                    <nav aria-label="Page navigation">
                        <ul class="pagination justify-content-center">
                            <% if (typeof hasPreviousPage !== 'undefined' && hasPreviousPage) { %>
                                <li class="page-item">
                                    <a class="page-link" href="?page=<%= previousPage %><%= typeof selectedPrice !== 'undefined' ? '&price=' + selectedPrice : '' %>">
                                        <i class="fas fa-chevron-left"></i>
                                    </a>
                                </li>
                            <% } %>

                            <% for(let i = 1; i <= totalPages; i++) { %>
                                <li class="page-item <%= currentPage === i ? 'active' : '' %>">
                                    <a class="page-link" href="?page=<%= i %><%= typeof selectedPrice !== 'undefined' ? '&price=' + selectedPrice : '' %>">
                                        <%= i %>
                                    </a>
                                </li>
                            <% } %>

                            <% if (typeof hasNextPage !== 'undefined' && hasNextPage) { %>
                                <li class="page-item">
                                    <a class="page-link" href="?page=<%= nextPage %><%= typeof selectedPrice !== 'undefined' ? '&price=' + selectedPrice : '' %>">
                                        <i class="fas fa-chevron-right"></i>
                                    </a>
                                </li>
                            <% } %>
                        </ul>
                    </nav>
                </div>
            <% } %>
        </div>
    </div>
</div>

<style>
    /* Modern Variables */
    :root {
        --primary-color: #2d3436;
        --secondary-color: #636e72;
        --accent-color: #0984e3;
        --background-color: #f5f6fa;
        --card-background: rgba(255, 255, 255, 0.9);
        --shadow-color: rgba(0, 0, 0, 0.1);
        --gradient-start: #6c5ce7;
        --gradient-end: #a363d9;
        --transition-speed: 0.3s;
    }

    /* Global Styles */
    body {
        background-color: var(--background-color);
        color: var(--primary-color);
    }

    /* Glass Card Effect */
    .glass-card {
        background: var(--card-background);
        backdrop-filter: blur(10px);
        border-radius: 16px;
        border: 1px solid rgba(255, 255, 255, 0.2);
        box-shadow: 0 8px 32px var(--shadow-color);
        transition: transform var(--transition-speed), box-shadow var(--transition-speed);
    }

    .glass-card:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 40px var(--shadow-color);
    }

    /* Text Gradient */
    .text-gradient {
        background: linear-gradient(45deg, var(--gradient-start), var(--gradient-end));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        font-weight: 700;
    }

    /* Modern Search Input */
    .search-input-group {
        position: relative;
    }

    .search-icon {
        position: absolute;
        left: 16px;
        top: 50%;
        transform: translateY(-50%);
        color: var(--secondary-color);
    }

    .search-control {
        padding-left: 48px;
        height: 50px;
        border-radius: 12px;
        border: 2px solid transparent;
        transition: all var(--transition-speed);
    }

    .search-control:focus {
        border-color: var(--accent-color);
        box-shadow: 0 0 0 4px rgba(9, 132, 227, 0.1);
    }

    /* Modern Select */
    .modern-select {
        height: 50px;
        border-radius: 12px;
        border: 2px solid transparent;
        cursor: pointer;
        background-image: url("data:image/svg+xml,...");
        transition: all var(--transition-speed);
    }

    .modern-select:focus {
        border-color: var(--accent-color);
        box-shadow: 0 0 0 4px rgba(9, 132, 227, 0.1);
    }

    /* Product Card */
    .product-card {
        overflow: hidden;
    }

    .product-image-container {
        position: relative;
        padding-top: 100%;
        overflow: hidden;
    }

    .product-image {
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        object-fit: cover;
        transition: transform var(--transition-speed);
    }

    .product-card:hover .product-image {
        transform: scale(1.1);
    }

    /* Wishlist Button */
    .wishlist-btn {
        position: absolute;
        top: 16px;
        right: 16px;
        width: 40px;
        height: 40px;
        border-radius: 50%;
        background: white;
        border: none;
        box-shadow: 0 4px 12px var(--shadow-color);
        transition: all var(--transition-speed);
        z-index: 2;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .wishlist-btn:hover {
        transform: scale(1.1);
    }

    .wishlist-btn i {
        font-size: 18px;
        color: var(--primary-color);
        transition: all var(--transition-speed);
    }

    .wishlist-btn.active i {
        color: #e74c3c;
        animation: heartBeat 0.3s ease-in-out;
    }

    /* Stock Badge */
    .stock-badge {
        padding: 6px 12px;
        border-radius: 8px;
        font-size: 12px;
        font-weight: 600;
    }

    .in-stock {
        background-color: #d5f5e3;
        color: #27ae60;
    }

    .out-of-stock {
        background-color: #fde2e2;
        color: #e74c3c;
    }

    /* Product Title and Price */
    .product-title {
        font-size: 1rem;
        font-weight: 600;
        line-height: 1.4;
        margin-bottom: 8px;
        color: var(--primary-color);
    }

    .current-price {
        font-size: 1.25rem;
        font-weight: 700;
        color: var(--accent-color);
    }

    .original-price {
        font-size: 0.9rem;
        color: var(--secondary-color);
        text-decoration: line-through;
        margin-left: 8px;
    }

    /* Custom Range Slider */
    .range-slider {
        width: 100%;
        padding: 8px 0;
    }

    .custom-range {
        -webkit-appearance: none;
        width: 100%;
        height: 6px;
        border-radius: 3px;
        background: #dfe6e9;
        outline: none;
    }

    .custom-range::-webkit-slider-thumb {
        -webkit-appearance: none;
        width: 20px;
        height: 20px;
        border-radius: 50%;
        background: var(--accent-color);
        cursor: pointer;
        transition: all var(--transition-speed);
    }

    .custom-range::-webkit-slider-thumb:hover {
        transform: scale(1.2);
    }

    /* Pagination */
    .pagination {
        gap: 8px;
    }

    .page-link {
        width: 40px;
        height: 40px;
        display: flex;
        align-items: center;
        justify-content: center;
        border-radius: 8px !important;
        border: none;
        color: var(--primary-color);
        transition: all var(--transition-speed);
    }

    .page-link:hover {
        background-color: var(--accent-color);
        color: white;
    }

    .page-item.active .page-link {
        background-color: var(--accent-color);
        color: white;
    }

    /* Animations */
    @keyframes heartBeat {
        0% { transform: scale(1); }
        50% { transform: scale(1.3); }
        100% { transform: scale(1); }
    }

    /* Hover Effects */
    .btn-hover-effect {
        position: relative;
        overflow: hidden;
        transition: all var(--transition-speed);
    }

    .btn-hover-effect::after {
        content: '';
        position: absolute;
        width: 100%;
        height: 100%;
        top: 0;
        left: -100%;
        background: linear-gradient(
            120deg,
            transparent,
            rgba(255, 255, 255, 0.2),
            transparent
        );
        transition: all var(--transition-speed);
    }

    .btn-hover-effect:hover::after {
        left: 100%;
    }

    /* Responsive Adjustments */
    @media (max-width: 768px) {
        .filters-wrapper {
            position: fixed;
            bottom: 0;
            left: 0;
            right: 0;
            z-index: 1000;
            transform: translateY(100%);
            transition: transform var(--transition-speed);
        }

        .filters-wrapper.active {
            transform: translateY(0);
        }
    }
</style>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Update price value display
    const priceRange = document.getElementById('priceRange');
    const priceValue = document.getElementById('priceValue');
    const clearCategoryBtn = document.getElementById('clearCategory');
    const sortSelect = document.getElementById('sortSelect');
    const searchInput = document.getElementById('searchInput');
    const productsContainer = document.getElementById('products-container');
    const productItems = document.querySelectorAll('.product-item');
    
    if(priceRange && priceValue) {
        priceRange.addEventListener('input', function() {
            priceValue.textContent = '₹' + this.value;
        });
    }

    // Handle search input
    if(searchInput) {
        let searchTimeout;
        searchInput.addEventListener('input', function() {
            clearTimeout(searchTimeout);
            searchTimeout = setTimeout(() => {
                const searchQuery = this.value.trim().toLowerCase();
                
                // Show/hide products based on search
                productItems.forEach(item => {
                    const productCard = item.querySelector('.product-card');
                    const productName = productCard.dataset.productName;
                    const productDescription = productCard.dataset.productDescription;
                    const productBrand = productCard.dataset.productBrand;
                    
                    if (searchQuery === '' || 
                        productName.includes(searchQuery) || 
                        productDescription.includes(searchQuery) || 
                        productBrand.includes(searchQuery)) {
                        item.style.display = '';
                    } else {
                        item.style.display = 'none';
                    }
                });

                // Update visible count
                const visibleCount = document.querySelectorAll('.product-item[style=""]').length;
                updateResultCount(visibleCount);
            }, 300);
        });
    }

    // Handle sort selection
    if(sortSelect) {
        sortSelect.addEventListener('change', function() {
            const sortValue = this.value;
            const items = Array.from(productItems);
            
            items.sort((a, b) => {
                const cardA = a.querySelector('.product-card');
                const cardB = b.querySelector('.product-card');
                
                switch(sortValue) {
                    case 'priceHigh':
                        return parseFloat(cardB.dataset.productPrice) - parseFloat(cardA.dataset.productPrice);
                    case 'priceLow':
                        return parseFloat(cardA.dataset.productPrice) - parseFloat(cardB.dataset.productPrice);
                    case 'nameAsc':
                        return cardA.dataset.productName.localeCompare(cardB.dataset.productName);
                    case 'nameDesc':
                        return cardB.dataset.productName.localeCompare(cardA.dataset.productName);
                    default:
                        return 0;
                }
            });
            
            // Re-append sorted items
            items.forEach(item => productsContainer.appendChild(item));
        });
    }

    // Function to update result count
    function updateResultCount(count) {
        const countDisplay = document.createElement('div');
        countDisplay.className = 'text-muted mb-3';
        countDisplay.textContent = `${count} products found`;
        
        // Remove existing count display if any
        const existingCount = document.querySelector('.text-muted.mb-3');
        if (existingCount) {
            existingCount.remove();
        }
        
        // Insert count before products container
        productsContainer.parentNode.insertBefore(countDisplay, productsContainer);
    }

    // Handle clear category button
    if(clearCategoryBtn) {
        clearCategoryBtn.addEventListener('click', function() {
            // Uncheck all category radio buttons
            document.querySelectorAll('input[name="category"]').forEach(input => {
                input.checked = false;
            });
            
            // Get current sort value
            const currentSort = sortSelect.value;
            
            // Build URL with only sort if present
            let url = '/shop';
            if(currentSort) {
                url += '?sort=' + currentSort;
            }
            
            // Redirect to shop with only sort parameter
            window.location.href = url;
        });
    }

    // Handle filter form submission
    const filterForm = document.getElementById('filterForm');
    if(filterForm) {
        filterForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            const selectedCategory = formData.get('category');
            const price = formData.get('price');
            const sort = sortSelect.value;

            // Build query string
            const params = new URLSearchParams();
            
            // Add selected filters to query params
            if(selectedCategory) {
                params.append('category', selectedCategory);
            }
            if(price && price !== '100000') {
                params.append('price', price);
            }
            if(sort) {
                params.append('sort', sort);
            }

            // Determine which endpoint to use
            let endpoint = '/shop';
            if(selectedCategory) {
                endpoint = '/filter';
            } else if(price && price !== '100000') {
                endpoint = '/filterPrice';
            }

            // Redirect with query parameters
            window.location.href = endpoint + (params.toString() ? '?' + params.toString() : '');
        });
    }
});
</script>

<%- include('../partials/user/footer.ejs') %>