<style>
    .order-details-page {
        background-color: #f8f9fa;
        padding: 30px 0;
    }
    
    .order-card {
        border: none;
        box-shadow: 0 0 20px rgba(0, 0, 0, 0.08);
        border-radius: 15px;
        overflow: hidden;
    }
    
    .order-card .card-header {
        background-color: #487379;
        color: white;
        padding: 20px;
        border: none;
    }
    
    .order-card .card-title {
        margin: 0;
        font-size: 1.5rem;
        font-weight: 600;
    }
    
    .info-section {
        background-color: white;
        padding: 25px;
        border-radius: 10px;
        margin-bottom: 20px;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.04);
    }
    
    .info-section h5 {
        color: #487379;
        font-weight: 600;
        margin-bottom: 20px;
        padding-bottom: 10px;
        border-bottom: 2px solid #eee;
    }
    
    .info-item {
        margin-bottom: 15px;
    }
    
    .info-item strong {
        color: #555;
        min-width: 120px;
        display: inline-block;
    }
    
    .table {
        border-radius: 10px;
        overflow: hidden;
        box-shadow: 0 2px 4px rgba(0, 0, 0, 0.04);
    }
    
    .table thead th {
        background-color: #f8f9fa;
        border: none;
        padding: 15px;
        font-weight: 600;
        color: #487379;
    }
    
    .table tbody td {
        padding: 15px;
        vertical-align: middle;
        border-color: #eee;
    }
    
    .table tfoot td {
        background-color: #f8f9fa;
        font-weight: 600;
    }
    
    .badge {
        padding: 8px 12px;
        border-radius: 6px;
        font-weight: 500;
    }
    
    .back-btn {
        background-color: #487379;
        color: white;
        padding: 10px 25px;
        border-radius: 8px;
        transition: all 0.3s ease;
    }
    
    .back-btn:hover {
        background-color: #3a5c61;
        color: white;
        transform: translateY(-2px);
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
    }
    
    .price-text {
        color: #487379;
        font-weight: 600;
    }
    
    .total-row {
        background-color: #f8f9fa;
        font-size: 1.1em;
    }
    
    .cancel-btn {
        background-color: #dc3545;
        color: white;
        padding: 6px 12px;
        border-radius: 6px;
        font-size: 0.875rem;
        transition: all 0.3s ease;
        border: none;
        cursor: pointer;
    }
    
    .cancel-btn:hover {
        background-color: #bb2d3b;
        transform: translateY(-1px);
    }
    
    .cancel-btn:disabled {
        background-color: #6c757d;
        cursor: not-allowed;
        transform: none;
    }
    
    @media (max-width: 768px) {
        .order-details-page {
            padding: 15px 0;
        }
        
        .info-item strong {
            min-width: 100px;
        }
        
        .table-responsive {
            border-radius: 10px;
            overflow: hidden;
        }
    }
</style>

<head>
    <!-- Font Awesome -->
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <!-- SweetAlert2 CSS -->
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/@sweetalert2/theme-bootstrap-4/bootstrap-4.css">
    <!-- SweetAlert2 JS -->
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <!-- Animate.css -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
</head>

<div class="order-details-page">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-12 col-lg-10">
                <div class="order-card card">
                    <div class="card-header">
                        <h3 class="card-title">Order Details</h3>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-6">
                                <div class="info-section">
                                    <h5>Order Information</h5>
                                    <div class="info-item">
                                        <strong>Order ID:</strong> 
                                        <span><%= order.orderId %></span>
                                    </div>
                                    <div class="info-item">
                                        <strong>Order Date:</strong>
                                        <span><%= new Date(order.createdOn).toLocaleDateString() %></span>
                                    </div>
                                    <div class="info-item">
                                        <strong>Total Amount:</strong>
                                        <span class="price-text">₹<%= order.finalAmount %></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="info-section">
                                    <h5>Shipping Address</h5>
                                    <div class="info-item">
                                        <strong>Name:</strong>
                                        <span><%= order.shippingAddress.name %></span>
                                    </div>
                                    <div class="info-item">
                                        <strong>Phone:</strong>
                                        <span><%= order.shippingAddress.phone %></span>
                                    </div>
                                    <div class="info-item">
                                        <strong>Address:</strong>
                                        <span>
                                            <%= order.shippingAddress.landmark %>, 
                                            <%= order.shippingAddress.city %>, 
                                            <%= order.shippingAddress.state %> - 
                                            <%= order.shippingAddress.pincode %>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <div class="info-section mt-4">
                            <h5>Order Items</h5>
                            <div class="table-responsive">
                                <table class="table table-hover">
                                    <thead>
                                        <tr>
                                            <th>Product</th>
                                            <th>Quantity</th>
                                            <th>Price</th>
                                            <th>Status</th>
                                            <th>Action</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <% order.orderedItems.forEach(item => { %>
                                            <tr>
                                                <td>
                                                    <div class="d-flex align-items-center">
                                                        <% if (item.id && item.id.productImage && item.id.productImage.length > 0) { %>
                                                            <img src="/uploads/re-image/<%= item.id.productImage[0] %>" alt="Product" class="img-fluid" style="max-width: 50px; margin-right: 10px;">
                                                        <% } else { %>
                                                            <img src="/uploads/re-image/default-product.jpg" alt="Product" class="img-fluid" style="max-width: 50px; margin-right: 10px;">
                                                        <% } %>
                                                        <%= item.name %>
                                                    </div>
                                                </td>
                                                <td><%= item.quantity %></td>
                                                <td class="price-text">₹<%= item.price %></td>
                                                <td><span class="badge <%= item.status === 'Delivered' ? 'bg-success' : item.status === 'Cancelled' ? 'bg-danger' : 'bg-info' %>">
                                                    <%= item.status %>
                                                </span></td>
                                                <td>
                                                    <% if (item.status === 'Delivered') { %>
                                                        <button onclick="returnProduct('<%= order._id %>', '<%= item.id._id %>')" 
                                                                class="btn btn-warning btn-sm">
                                                            Return
                                                        </button>
                                                    <% } else if (item.status !== 'Cancelled' && item.status !== 'Delivered') { %>
                                                        <button 
                                                            class="cancel-btn"
                                                            onclick="cancelProduct('<%= order.orderId %>', '<%= item.productId %>')"
                                                        >
                                                            Cancel
                                                        </button>
                                                    <% } %>
                                                </td>
                                            </tr>
                                        <% }); %>
                                    </tbody>
                                    <tfoot>
                                        <tr class="total-row">
                                            <td colspan="4" class="text-end"><strong>Total Amount:</strong></td>
                                            <td class="text-end price-text"><strong>₹<%= order.finalAmount %></strong></td>
                                            <td></td>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>

                        <div class="text-end mt-4">
                            <button onclick="cancelEntireOrder('<%= order._id %>')" class="btn cancel-btn me-2">
                                <i class="fas fa-times me-2"></i>Cancel Order
                            </button>
                            <a href="/userProfile" class="btn back-btn">
                                <i class="fas fa-arrow-left me-2"></i>Back to Orders
                            </a>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap JS and dependencies -->
<script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.min.js"></script>

<script>
function returnProduct(orderId, productId) {
    Swal.fire({
        title: 'Return Product',
        html: `
            <div class='text-center'>
                <i class='fas fa-undo text-warning' style='font-size: 3rem; margin-bottom: 1rem;'></i><br>
                <p>Please select a reason for return:</p>
                <select id='returnReason' class='form-select mb-3'>
                    <option value=''>Select a reason</option>
                    <option value='Wrong product received'>Wrong product received</option>
                    <option value='Product damaged'>Product damaged</option>
                    <option value='Product defective'>Product defective</option>
                    <option value='Size/fit issue'>Size/fit issue</option>
                    <option value='Quality not as expected'>Quality not as expected</option>
                    <option value='Other'>Other</option>
                </select>
                <div id='otherReasonDiv' style='display: none;'>
                    <textarea id='otherReason' class='form-control' placeholder='Please specify your reason'></textarea>
                </div>
            </div>`,
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, return it!',
        cancelButtonText: 'No, keep it',
        didOpen: () => {
            const select = document.getElementById('returnReason');
            const otherDiv = document.getElementById('otherReasonDiv');
            select.addEventListener('change', (e) => {
                if (e.target.value === 'Other') {
                    otherDiv.style.display = 'block';
                } else {
                    otherDiv.style.display = 'none';
                }
            });
        },
        preConfirm: () => {
            const reason = document.getElementById('returnReason').value;
            if (!reason) {
                Swal.showValidationMessage('Please select a reason');
                return false;
            }
            if (reason === 'Other') {
                const otherReason = document.getElementById('otherReason').value;
                if (!otherReason.trim()) {
                    Swal.showValidationMessage('Please specify your reason');
                    return false;
                }
                return otherReason;
            }
            return reason;
        }
    }).then((result) => {
        if (result.isConfirmed) {
            const reason = result.value;
            fetch('/return-product', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    orderId: orderId,
                    productId: productId,
                    reason: reason
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire(
                        'Returned!',
                        'Your product return request has been initiated.',
                        'success'
                    ).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire(
                        'Error!',
                        data.message || 'Something went wrong!',
                        'error'
                    );
                }
            })
            .catch(error => {
                Swal.fire(
                    'Error!',
                    'Something went wrong!',
                    'error'
                );
            });
        }
    });
}

function cancelProduct(orderId, productId) {
    Swal.fire({
        title: 'Cancel Product',
        html: `
            <div class='text-center'>
                <i class='fas fa-times-circle text-danger' style='font-size: 3rem; margin-bottom: 1rem;'></i><br>
                <p>Please select a reason for cancellation:</p>
                <select id='cancelReason' class='form-select mb-3'>
                    <option value=''>Select a reason</option>
                    <option value='Changed my mind'>Changed my mind</option>
                    <option value='Found better price elsewhere'>Found better price elsewhere</option>
                    <option value='Delivery time too long'>Delivery time too long</option>
                    <option value='Ordered by mistake'>Ordered by mistake</option>
                    <option value='Payment issues'>Payment issues</option>
                    <option value='Other'>Other</option>
                </select>
                <div id='otherCancelReasonDiv' style='display: none;'>
                    <textarea id='otherCancelReason' class='form-control' placeholder='Please specify your reason'></textarea>
                </div>
            </div>`,
        showCancelButton: true,
        confirmButtonColor: '#d33',
        cancelButtonColor: '#3085d6',
        confirmButtonText: 'Yes, cancel it!',
        cancelButtonText: 'No, keep it',
        didOpen: () => {
            const select = document.getElementById('cancelReason');
            const otherDiv = document.getElementById('otherCancelReasonDiv');
            select.addEventListener('change', (e) => {
                if (e.target.value === 'Other') {
                    otherDiv.style.display = 'block';
                } else {
                    otherDiv.style.display = 'none';
                }
            });
        },
        preConfirm: () => {
            const reason = document.getElementById('cancelReason').value;
            if (!reason) {
                Swal.showValidationMessage('Please select a reason');
                return false;
            }
            if (reason === 'Other') {
                const otherReason = document.getElementById('otherCancelReason').value;
                if (!otherReason.trim()) {
                    Swal.showValidationMessage('Please specify your reason');
                    return false;
                }
                return otherReason;
            }
            return reason;
        }
    }).then((result) => {
        if (result.isConfirmed) {
            const reason = result.value;
            fetch(`/orders/${orderId}/product/${productId}/cancel`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify({
                    reason: reason
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    Swal.fire(
                        'Cancelled!',
                        'Your product has been cancelled.',
                        'success'
                    ).then(() => {
                        location.reload();
                    });
                } else {
                    Swal.fire(
                        'Error!',
                        data.message || 'Something went wrong!',
                        'error'
                    );
                }
            })
            .catch(error => {
                Swal.fire(
                    'Error!',
                    'Something went wrong!',
                    'error'
                );
            });
        }
    });
}

function cancelEntireOrder(orderId) {
    Swal.fire({
        title: 'Cancel Entire Order?',
        html: "<div class='text-center'>" +
              "<i class='fas fa-exclamation-triangle text-warning' style='font-size: 3rem; margin-bottom: 1rem;'></i><br>" +
              "This action cannot be undone. Are you sure you want to cancel this order?" +
              "</div>",
        icon: 'warning',
        showCancelButton: true,
        confirmButtonColor: '#dc3545',
        cancelButtonColor: '#6c757d',
        confirmButtonText: '<i class="fas fa-check"></i> Yes, cancel order!',
        cancelButtonText: '<i class="fas fa-times"></i> No, keep order',
        customClass: {
            confirmButton: 'btn btn-danger',
            cancelButton: 'btn btn-secondary',
            title: 'text-danger'
        },
        buttonsStyling: false,
        reverseButtons: true,
        background: '#fff',
        showClass: {
            popup: 'animate__animated animate__fadeInDown'
        },
        hideClass: {
            popup: 'animate__animated animate__fadeOutUp'
        }
    }).then((result) => {
        if (result.isConfirmed) {
            Swal.fire({
                title: 'Cancelling Order...',
                html: 'Please wait while we process your request.',
                allowOutsideClick: false,
                didOpen: () => {
                    Swal.showLoading();
                }
            });

            fetch(`/orders/${orderId}/cancel`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.message) {
                    Swal.fire({
                        icon: 'success',
                        title: 'Order Cancelled!',
                        text: data.message,
                        showConfirmButton: false,
                        timer: 2000,
                        customClass: {
                            popup: 'animated bounceIn'
                        }
                    }).then(() => {
                        window.location.reload();
                    });
                } else {
                    Swal.fire({
                        icon: 'error',
                        title: 'Cannot Cancel Order',
                        text: data.error || 'Failed to cancel the order.',
                        customClass: {
                            confirmButton: 'btn btn-danger'
                        },
                        buttonsStyling: false
                    });
                }
            })
            .catch(error => {
                console.error('Error:', error);
                Swal.fire({
                    icon: 'error',
                    title: 'Error!',
                    text: 'Something went wrong while cancelling the order.',
                    customClass: {
                        confirmButton: 'btn btn-danger'
                    },
                    buttonsStyling: false
                });
            });
        }
    });
}
</script>

</body>
</html>
